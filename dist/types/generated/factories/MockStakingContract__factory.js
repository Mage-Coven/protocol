"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.MockStakingContract__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "balanceOf",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "getVotes",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "balance",
                type: "uint256",
            },
        ],
        name: "setBalanceOf",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_govHook",
                type: "address",
            },
        ],
        name: "setGovernanceHook",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_totalSupply",
                type: "uint256",
            },
        ],
        name: "setTotalSupply",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "newVotes",
                type: "uint256",
            },
        ],
        name: "setVotes",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "totalSupply",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "from",
                type: "address",
            },
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "votes",
                type: "uint256",
            },
        ],
        name: "transferVotes",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b50610459806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80639ab24eb01161005b5780639ab24eb014610116578063b46310f61461013f578063c05cacc214610169578063f7ea7a3d1461017c57600080fd5b806318160ddd1461008d57806357c37b69146100a857806370a08231146100da5780638a8ac81314610103575b600080fd5b61009660025481565b60405190815260200160405180910390f35b6100d86100b636600461033d565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b005b6100966100e836600461033d565b6001600160a01b031660009081526020819052604090205490565b6100d861011136600461039b565b61018f565b61009661012436600461033d565b6001600160a01b031660009081526001602052604090205490565b6100d861014d36600461039b565b6001600160a01b03909116600090815260208190526040902055565b6100d861017736600461035f565b610276565b6100d861018a3660046103c5565b600255565b6001600160a01b038083166000908152600160205260409020805490839055600354909116156102715781811161024b576003546001600160a01b0316635b12a4006000856101de85876103f6565b6040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015260448201526064015b600060405180830381600087803b15801561022e57600080fd5b505af1158015610242573d6000803e3d6000fd5b50505050505050565b81811115610271576003546001600160a01b0316635b12a4008460006101de86866103f6565b505050565b6001600160a01b0383166000908152600160205260408120805483929061029e9084906103f6565b90915550506001600160a01b038216600090815260016020526040812080548392906102cb9084906103de565b90915550506003546001600160a01b031615610271576003546040516216c4a960ea1b81526001600160a01b03858116600483015284811660248301526044820184905290911690635b12a40090606401610214565b80356001600160a01b038116811461033857600080fd5b919050565b60006020828403121561034f57600080fd5b61035882610321565b9392505050565b60008060006060848603121561037457600080fd5b61037d84610321565b925061038b60208501610321565b9150604084013590509250925092565b600080604083850312156103ae57600080fd5b6103b783610321565b946020939093013593505050565b6000602082840312156103d757600080fd5b5035919050565b600082198211156103f1576103f161040d565b500190565b6000828210156104085761040861040d565b500390565b634e487b7160e01b600052601160045260246000fdfea26469706673582212207f9ac4931594e410dc10ce1b61c0f7ce714cc3b4169b2a0a78f803b7923ce8ce64736f6c63430008060033";
class MockStakingContract__factory extends ethers_1.ContractFactory {
    constructor(signer) {
        super(_abi, _bytecode, signer);
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.MockStakingContract__factory = MockStakingContract__factory;
MockStakingContract__factory.bytecode = _bytecode;
MockStakingContract__factory.abi = _abi;
//# sourceMappingURL=MockStakingContract__factory.js.map