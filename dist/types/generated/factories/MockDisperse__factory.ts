/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MockDisperse, MockDisperseInterface } from "../MockDisperse";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "recipients",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "disperseTokenSimple",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506102ed806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806351ba162c14610030575b600080fd5b61004361003e3660046101dd565b610045565b005b60005b8381101561014357856001600160a01b03166323b872dd3387878581811061007257610072610289565b90506020020160208101906100879190610197565b86868681811061009957610099610289565b6040516001600160e01b031960e088901b1681526001600160a01b03958616600482015294909316602485015250602090910201356044820152606401602060405180830381600087803b1580156100f057600080fd5b505af1158015610104573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061012891906101bb565b61013157600080fd5b8061013b81610260565b915050610048565b505050505050565b60008083601f84011261015d57600080fd5b50813567ffffffffffffffff81111561017557600080fd5b6020830191508360208260051b850101111561019057600080fd5b9250929050565b6000602082840312156101a957600080fd5b81356101b48161029f565b9392505050565b6000602082840312156101cd57600080fd5b815180151581146101b457600080fd5b6000806000806000606086880312156101f557600080fd5b85356102008161029f565b9450602086013567ffffffffffffffff8082111561021d57600080fd5b61022989838a0161014b565b9096509450604088013591508082111561024257600080fd5b5061024f8882890161014b565b969995985093965092949392505050565b600060001982141561028257634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03811681146102b457600080fd5b5056fea26469706673582212209f624312efad4a613f72305af27d3edfa0b9413133146128f479d34bd211675364736f6c63430008060033";

export class MockDisperse__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockDisperse> {
    return super.deploy(overrides || {}) as Promise<MockDisperse>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockDisperse {
    return super.attach(address) as MockDisperse;
  }
  connect(signer: Signer): MockDisperse__factory {
    return super.connect(signer) as MockDisperse__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockDisperseInterface {
    return new utils.Interface(_abi) as MockDisperseInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockDisperse {
    return new Contract(address, _abi, signerOrProvider) as MockDisperse;
  }
}
