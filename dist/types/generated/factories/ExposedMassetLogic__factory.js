"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ExposedMassetLogic__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "uint128",
                        name: "ratio",
                        type: "uint128",
                    },
                    {
                        internalType: "uint128",
                        name: "vaultBalance",
                        type: "uint128",
                    },
                ],
                internalType: "struct BassetData[]",
                name: "_bAssets",
                type: "tuple[]",
            },
            {
                internalType: "uint8",
                name: "_i",
                type: "uint8",
            },
            {
                internalType: "uint256",
                name: "_rawInput",
                type: "uint256",
            },
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "supply",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "a",
                        type: "uint256",
                    },
                    {
                        components: [
                            {
                                internalType: "uint128",
                                name: "min",
                                type: "uint128",
                            },
                            {
                                internalType: "uint128",
                                name: "max",
                                type: "uint128",
                            },
                        ],
                        internalType: "struct WeightLimits",
                        name: "limits",
                        type: "tuple",
                    },
                    {
                        internalType: "uint256",
                        name: "recolFee",
                        type: "uint256",
                    },
                ],
                internalType: "struct InvariantConfig",
                name: "_config",
                type: "tuple",
            },
        ],
        name: "computeMint",
        outputs: [
            {
                internalType: "uint256",
                name: "mintAmount",
                type: "uint256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "uint128",
                        name: "ratio",
                        type: "uint128",
                    },
                    {
                        internalType: "uint128",
                        name: "vaultBalance",
                        type: "uint128",
                    },
                ],
                internalType: "struct BassetData[]",
                name: "_bAssets",
                type: "tuple[]",
            },
            {
                internalType: "uint8[]",
                name: "_indices",
                type: "uint8[]",
            },
            {
                internalType: "uint256[]",
                name: "_rawInputs",
                type: "uint256[]",
            },
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "supply",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "a",
                        type: "uint256",
                    },
                    {
                        components: [
                            {
                                internalType: "uint128",
                                name: "min",
                                type: "uint128",
                            },
                            {
                                internalType: "uint128",
                                name: "max",
                                type: "uint128",
                            },
                        ],
                        internalType: "struct WeightLimits",
                        name: "limits",
                        type: "tuple",
                    },
                    {
                        internalType: "uint256",
                        name: "recolFee",
                        type: "uint256",
                    },
                ],
                internalType: "struct InvariantConfig",
                name: "_config",
                type: "tuple",
            },
        ],
        name: "computeMintMulti",
        outputs: [
            {
                internalType: "uint256",
                name: "mintAmount",
                type: "uint256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "uint128",
                        name: "ratio",
                        type: "uint128",
                    },
                    {
                        internalType: "uint128",
                        name: "vaultBalance",
                        type: "uint128",
                    },
                ],
                internalType: "struct BassetData[]",
                name: "_bAssets",
                type: "tuple[]",
            },
            {
                internalType: "uint8",
                name: "_o",
                type: "uint8",
            },
            {
                internalType: "uint256",
                name: "_netMassetQuantity",
                type: "uint256",
            },
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "supply",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "a",
                        type: "uint256",
                    },
                    {
                        components: [
                            {
                                internalType: "uint128",
                                name: "min",
                                type: "uint128",
                            },
                            {
                                internalType: "uint128",
                                name: "max",
                                type: "uint128",
                            },
                        ],
                        internalType: "struct WeightLimits",
                        name: "limits",
                        type: "tuple",
                    },
                    {
                        internalType: "uint256",
                        name: "recolFee",
                        type: "uint256",
                    },
                ],
                internalType: "struct InvariantConfig",
                name: "_config",
                type: "tuple",
            },
            {
                internalType: "uint256",
                name: "_feeRate",
                type: "uint256",
            },
        ],
        name: "computeRedeem",
        outputs: [
            {
                internalType: "uint256",
                name: "rawOutputUnits",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "scaledFee",
                type: "uint256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "uint128",
                        name: "ratio",
                        type: "uint128",
                    },
                    {
                        internalType: "uint128",
                        name: "vaultBalance",
                        type: "uint128",
                    },
                ],
                internalType: "struct BassetData[]",
                name: "_bAssets",
                type: "tuple[]",
            },
            {
                internalType: "uint8[]",
                name: "_indices",
                type: "uint8[]",
            },
            {
                internalType: "uint256[]",
                name: "_rawOutputs",
                type: "uint256[]",
            },
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "supply",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "a",
                        type: "uint256",
                    },
                    {
                        components: [
                            {
                                internalType: "uint128",
                                name: "min",
                                type: "uint128",
                            },
                            {
                                internalType: "uint128",
                                name: "max",
                                type: "uint128",
                            },
                        ],
                        internalType: "struct WeightLimits",
                        name: "limits",
                        type: "tuple",
                    },
                    {
                        internalType: "uint256",
                        name: "recolFee",
                        type: "uint256",
                    },
                ],
                internalType: "struct InvariantConfig",
                name: "_config",
                type: "tuple",
            },
            {
                internalType: "uint256",
                name: "_feeRate",
                type: "uint256",
            },
        ],
        name: "computeRedeemExact",
        outputs: [
            {
                internalType: "uint256",
                name: "grossMasset",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "uint128",
                        name: "ratio",
                        type: "uint128",
                    },
                    {
                        internalType: "uint128",
                        name: "vaultBalance",
                        type: "uint128",
                    },
                ],
                internalType: "struct BassetData[]",
                name: "_bAssets",
                type: "tuple[]",
            },
            {
                internalType: "uint8",
                name: "_i",
                type: "uint8",
            },
            {
                internalType: "uint8",
                name: "_o",
                type: "uint8",
            },
            {
                internalType: "uint256",
                name: "_rawInput",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_feeRate",
                type: "uint256",
            },
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "supply",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "a",
                        type: "uint256",
                    },
                    {
                        components: [
                            {
                                internalType: "uint128",
                                name: "min",
                                type: "uint128",
                            },
                            {
                                internalType: "uint128",
                                name: "max",
                                type: "uint128",
                            },
                        ],
                        internalType: "struct WeightLimits",
                        name: "limits",
                        type: "tuple",
                    },
                    {
                        internalType: "uint256",
                        name: "recolFee",
                        type: "uint256",
                    },
                ],
                internalType: "struct InvariantConfig",
                name: "_config",
                type: "tuple",
            },
        ],
        name: "computeSwap",
        outputs: [
            {
                internalType: "uint256",
                name: "bAssetOutputQuantity",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "scaledSwapFee",
                type: "uint256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "uint128",
                        name: "ratio",
                        type: "uint128",
                    },
                    {
                        internalType: "uint128",
                        name: "vaultBalance",
                        type: "uint128",
                    },
                ],
                internalType: "struct BassetData[]",
                name: "_bAssets",
                type: "tuple[]",
            },
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "supply",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "a",
                        type: "uint256",
                    },
                    {
                        components: [
                            {
                                internalType: "uint128",
                                name: "min",
                                type: "uint128",
                            },
                            {
                                internalType: "uint128",
                                name: "max",
                                type: "uint128",
                            },
                        ],
                        internalType: "struct WeightLimits",
                        name: "limits",
                        type: "tuple",
                    },
                    {
                        internalType: "uint256",
                        name: "recolFee",
                        type: "uint256",
                    },
                ],
                internalType: "struct InvariantConfig",
                name: "_config",
                type: "tuple",
            },
        ],
        name: "getK",
        outputs: [
            {
                internalType: "uint256",
                name: "k",
                type: "uint256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b50610c63806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806301611c8a146100675780633eb09dad1461008d578063638e4bf1146100b5578063a75c0403146100c8578063b6da525a146100db578063d07312a2146100ee575b600080fd5b61007a61007536600461062d565b610101565b6040519081526020015b60405180910390f35b6100a061009b3660046106c8565b61019a565b60408051928352602083019190915201610084565b6100a06100c336600461081a565b610239565b61007a6100d636600461076c565b61027b565b6100a06100e936600461087b565b61030e565b61007a6100fc3660046107bb565b6103b0565b604051635fcf845960e11b815260009073__$6a4be19f34d71a078def5cee18ccebcd10$__9063bf9f08b290610141908890889088908890600401610a3d565b60206040518083038186803b15801561015957600080fd5b505af415801561016d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061019191906108fe565b95945050505050565b60008073__$6a4be19f34d71a078def5cee18ccebcd10$__63b3ffbf3188888888886040518663ffffffff1660e01b81526004016101dc959493929190610a89565b604080518083038186803b1580156101f357600080fd5b505af4158015610207573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022b9190610917565b915091509550959350505050565b60008073__$6a4be19f34d71a078def5cee18ccebcd10$__637c14499488888888886040518663ffffffff1660e01b81526004016101dc959493929190610b42565b60405163d38e18e960e01b815260009073__$6a4be19f34d71a078def5cee18ccebcd10$__9063d38e18e9906102b79086908690600401610ae6565b604080518083038186803b1580156102ce57600080fd5b505af41580156102e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103069190610917565b949350505050565b60008073__$6a4be19f34d71a078def5cee18ccebcd10$__63b995a2b58989898989896040518763ffffffff1660e01b815260040161035296959493929190610b75565b604080518083038186803b15801561036957600080fd5b505af415801561037d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a19190610917565b91509150965096945050505050565b604051630ce8bc9b60e01b815260009073__$6a4be19f34d71a078def5cee18ccebcd10$__90630ce8bc9b90610141908890889088908890600401610b0f565b600082601f83011261040157600080fd5b8135602061041661041183610bf3565b610bc2565b80838252828201915082860187848660061b890101111561043657600080fd5b60005b858110156104605761044b8983610534565b84529284019260409190910190600101610439565b5090979650505050505050565b600082601f83011261047e57600080fd5b8135602061048e61041183610bf3565b80838252828201915082860187848660051b89010111156104ae57600080fd5b60005b85811015610460578135845292840192908401906001016104b1565b600082601f8301126104de57600080fd5b813560206104ee61041183610bf3565b80838252828201915082860187848660051b890101111561050e57600080fd5b60005b85811015610460576105228261061c565b84529284019290840190600101610511565b60006040828403121561054657600080fd5b6040516040810181811067ffffffffffffffff8211171561056957610569610c17565b60405290508061057883610600565b815261058660208401610600565b60208201525092915050565b600060a082840312156105a457600080fd5b6040516080810181811067ffffffffffffffff821117156105c7576105c7610c17565b806040525080915082358152602083013560208201526105ea8460408501610534565b6040820152608083013560608201525092915050565b80356001600160801b038116811461061757600080fd5b919050565b803560ff8116811461061757600080fd5b600080600080610100858703121561064457600080fd5b843567ffffffffffffffff8082111561065c57600080fd5b610668888389016103f0565b9550602087013591508082111561067e57600080fd5b61068a888389016104cd565b945060408701359150808211156106a057600080fd5b506106ad8782880161046d565b9250506106bd8660608701610592565b905092959194509250565b600080600080600061012086880312156106e157600080fd5b853567ffffffffffffffff808211156106f957600080fd5b61070589838a016103f0565b9650602088013591508082111561071b57600080fd5b61072789838a016104cd565b9550604088013591508082111561073d57600080fd5b5061074a8882890161046d565b93505061075a8760608801610592565b94979396509194610100013592915050565b60008060c0838503121561077f57600080fd5b823567ffffffffffffffff81111561079657600080fd5b6107a2858286016103f0565b9250506107b28460208501610592565b90509250929050565b60008060008061010085870312156107d257600080fd5b843567ffffffffffffffff8111156107e957600080fd5b6107f5878288016103f0565b9450506108046020860161061c565b9250604085013591506106bd8660608701610592565b6000806000806000610120868803121561083357600080fd5b853567ffffffffffffffff81111561084a57600080fd5b610856888289016103f0565b9550506108656020870161061c565b93506040860135925061075a8760608801610592565b600080600080600080610140878903121561089557600080fd5b863567ffffffffffffffff8111156108ac57600080fd5b6108b889828a016103f0565b9650506108c76020880161061c565b94506108d56040880161061c565b935060608701359250608087013591506108f28860a08901610592565b90509295509295509295565b60006020828403121561091057600080fd5b5051919050565b6000806040838503121561092a57600080fd5b505080516020909101519092909150565b600081518084526020808501945080840160005b8381101561098b5761097887835180516001600160801b03908116835260209182015116910152565b604096909601959082019060010161094f565b509495945050505050565b600081518084526020808501945080840160005b8381101561098b578151875295820195908201906001016109aa565b600081518084526020808501945080840160005b8381101561098b57815160ff16875295820195908201906001016109da565b80518252602081015160208301526040810151610a2f604084018280516001600160801b03908116835260209182015116910152565b506060015160809190910152565b6000610100808352610a518184018861093b565b90508281036020840152610a6581876109c6565b90508281036040840152610a798186610996565b91505061019160608301846109f9565b6000610120808352610a9d8184018961093b565b90508281036020840152610ab181886109c6565b90508281036040840152610ac58187610996565b915050610ad560608301856109f9565b826101008301529695505050505050565b60c081526000610af960c083018561093b565b9050610b0860208301846109f9565b9392505050565b6000610100808352610b238184018861093b565b91505060ff8516602083015283604083015261019160608301846109f9565b6000610120808352610b568184018961093b565b91505060ff86166020830152846040830152610ad560608301856109f9565b6000610140808352610b898184018a61093b565b91505060ff8716602083015260ff86166040830152846060830152836080830152610bb760a08301846109f9565b979650505050505050565b604051601f8201601f1916810167ffffffffffffffff81118282101715610beb57610beb610c17565b604052919050565b600067ffffffffffffffff821115610c0d57610c0d610c17565b5060051b60200190565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220d0c083a598c0e40ed86bc61b9de4bdcf370cd18cef8657f503ba3a954226743d64736f6c63430008060033";
class ExposedMassetLogic__factory extends ethers_1.ContractFactory {
    constructor(linkLibraryAddresses, signer) {
        super(_abi, ExposedMassetLogic__factory.linkBytecode(linkLibraryAddresses), signer);
    }
    static linkBytecode(linkLibraryAddresses) {
        let linkedBytecode = _bytecode;
        linkedBytecode = linkedBytecode.replace(new RegExp("__\\$6a4be19f34d71a078def5cee18ccebcd10\\$__", "g"), linkLibraryAddresses["contracts/masset/MassetLogic.sol:MassetLogic"]
            .replace(/^0x/, "")
            .toLowerCase());
        return linkedBytecode;
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.ExposedMassetLogic__factory = ExposedMassetLogic__factory;
ExposedMassetLogic__factory.bytecode = _bytecode;
ExposedMassetLogic__factory.abi = _abi;
//# sourceMappingURL=ExposedMassetLogic__factory.js.map