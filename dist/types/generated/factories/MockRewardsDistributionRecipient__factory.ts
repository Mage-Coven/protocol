/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockRewardsDistributionRecipient,
  MockRewardsDistributionRecipientInterface,
} from "../MockRewardsDistributionRecipient";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_rewardToken",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_platformToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "getPlatformToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRewardToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "notifyRewardAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "platformToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516101ce3803806101ce83398101604081905261002f9161007c565b600080546001600160a01b039384166001600160a01b031991821617909155600180549290931691161790556100af565b80516001600160a01b038116811461007757600080fd5b919050565b6000806040838503121561008f57600080fd5b61009883610060565b91506100a660208401610060565b90509250929050565b610110806100be6000396000f3fe6080604052348015600f57600080fd5b506004361060505760003560e01c80633c6b16ab14605557806369940d791460655780639ed374f714608e578063d1b812cd14609e578063f7c618c11460b0575b600080fd5b6063606036600460c2565b50565b005b6000546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b6001546001600160a01b03166072565b6001546072906001600160a01b031681565b6000546072906001600160a01b031681565b60006020828403121560d357600080fd5b503591905056fea26469706673582212205a407fe9b7a09b93be91400ee3fb2743ea9373d1f5943ee6d110580ef41968c164736f6c63430008060033";

export class MockRewardsDistributionRecipient__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _rewardToken: string,
    _platformToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockRewardsDistributionRecipient> {
    return super.deploy(
      _rewardToken,
      _platformToken,
      overrides || {}
    ) as Promise<MockRewardsDistributionRecipient>;
  }
  getDeployTransaction(
    _rewardToken: string,
    _platformToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _rewardToken,
      _platformToken,
      overrides || {}
    );
  }
  attach(address: string): MockRewardsDistributionRecipient {
    return super.attach(address) as MockRewardsDistributionRecipient;
  }
  connect(signer: Signer): MockRewardsDistributionRecipient__factory {
    return super.connect(signer) as MockRewardsDistributionRecipient__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockRewardsDistributionRecipientInterface {
    return new utils.Interface(
      _abi
    ) as MockRewardsDistributionRecipientInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockRewardsDistributionRecipient {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MockRewardsDistributionRecipient;
  }
}
