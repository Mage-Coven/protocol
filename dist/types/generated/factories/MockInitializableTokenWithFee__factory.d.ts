import { Signer, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MockInitializableTokenWithFee, MockInitializableTokenWithFeeInterface } from "../MockInitializableTokenWithFee";
export declare class MockInitializableTokenWithFee__factory extends ContractFactory {
    constructor(signer?: Signer);
    deploy(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): Promise<MockInitializableTokenWithFee>;
    getDeployTransaction(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): TransactionRequest;
    attach(address: string): MockInitializableTokenWithFee;
    connect(signer: Signer): MockInitializableTokenWithFee__factory;
    static readonly bytecode = "0x608060405234801561001057600080fd5b50610e19806100206000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80636c9452211161008c578063978bbdb911610066578063978bbdb9146101d6578063a457c2d7146101df578063a9059cbb146101f2578063dd62ed3e1461020557600080fd5b80636c9452211461019057806370a08231146101a557806395d89b41146101ce57600080fd5b806323b872dd116100c857806323b872dd14610142578063313ce56714610155578063395093511461016a57806340c10f191461017d57600080fd5b806306fdde03146100ef578063095ea7b31461010d57806318160ddd14610130575b600080fd5b6100f761023e565b6040516101049190610be2565b60405180910390f35b61012061011b366004610b16565b6102d0565b6040519015158152602001610104565b6003545b604051908152602001610104565b610120610150366004610ada565b6102e7565b60065460405160ff9091168152602001610104565b610120610178366004610b16565b610339565b61012061018b366004610b16565b610370565b6101a361019e366004610b40565b61037c565b005b6101346101b3366004610a8c565b6001600160a01b031660009081526001602052604090205490565b6100f7610426565b61013460005481565b6101206101ed366004610b16565b610435565b610120610200366004610b16565b61046c565b610134610213366004610aa7565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b60606004805461024d90610d92565b80601f016020809104026020016040519081016040528092919081815260200182805461027990610d92565b80156102c65780601f1061029b576101008083540402835291602001916102c6565b820191906000526020600020905b8154815290600101906020018083116102a957829003601f168201915b5050505050905090565b60006102dd338484610479565b5060015b92915050565b60006102f48484846105a2565b6001600160a01b03841660009081526002602090815260408083203380855292529091205461032f91869161032a908690610d7b565b610479565b5060019392505050565b3360008181526002602090815260408083206001600160a01b038716845290915281205490916102dd91859061032a908690610c37565b60006102dd8383610748565b6103f187878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8b018190048102820181019092528981529250899150889081908401838280828437600092019190915250889250610830915050565b66038d7ea4c6800060005561041d8261040e60ff8616600a610cb4565b6104189084610d5c565b610748565b50505050505050565b60606005805461024d90610d92565b3360008181526002602090815260408083206001600160a01b038716845290915281205490916102dd91859061032a908690610d7b565b60006102dd3384846105a2565b6001600160a01b0383166104e05760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084015b60405180910390fd5b6001600160a01b0382166105415760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104d7565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166106065760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104d7565b6001600160a01b0382166106685760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104d7565b60008054610677908390610870565b905060006106858284610d7b565b9050610691858361088c565b6001600160a01b0385166000908152600160205260409020546106b5908290610d7b565b6001600160a01b0380871660009081526001602052604080822093909355908616815220546106e5908290610c37565b6001600160a01b0380861660008181526001602052604090819020939093559151908716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906107399085815260200190565b60405180910390a35050505050565b6001600160a01b03821661079e5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016104d7565b806003546107ac9190610c37565b6003556001600160a01b0382166000908152600160205260409020546107d3908290610c37565b6001600160a01b0383166000818152600160205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906108249085815260200190565b60405180910390a35050565b825161084390600490602086019061098e565b50815161085790600590602085019061098e565b506006805460ff191660ff929092169190911790555050565b60006108858383670de0b6b3a764000061096f565b9392505050565b6001600160a01b0382166108ec5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016104d7565b806003546108fa9190610d7b565b6003556001600160a01b038216600090815260016020526040902054610921908290610d7b565b6001600160a01b0383166000818152600160205260408082209390935591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906108249085815260200190565b60008161097c8486610d5c565b6109869190610c4f565b949350505050565b82805461099a90610d92565b90600052602060002090601f0160209004810192826109bc5760008555610a02565b82601f106109d557805160ff1916838001178555610a02565b82800160010185558215610a02579182015b82811115610a025782518255916020019190600101906109e7565b50610a0e929150610a12565b5090565b5b80821115610a0e5760008155600101610a13565b80356001600160a01b0381168114610a3e57600080fd5b919050565b60008083601f840112610a5557600080fd5b50813567ffffffffffffffff811115610a6d57600080fd5b602083019150836020828501011115610a8557600080fd5b9250929050565b600060208284031215610a9e57600080fd5b61088582610a27565b60008060408385031215610aba57600080fd5b610ac383610a27565b9150610ad160208401610a27565b90509250929050565b600080600060608486031215610aef57600080fd5b610af884610a27565b9250610b0660208501610a27565b9150604084013590509250925092565b60008060408385031215610b2957600080fd5b610b3283610a27565b946020939093013593505050565b600080600080600080600060a0888a031215610b5b57600080fd5b873567ffffffffffffffff80821115610b7357600080fd5b610b7f8b838c01610a43565b909950975060208a0135915080821115610b9857600080fd5b50610ba58a828b01610a43565b909650945050604088013560ff81168114610bbf57600080fd5b9250610bcd60608901610a27565b91506080880135905092959891949750929550565b600060208083528351808285015260005b81811015610c0f57858101830151858201604001528201610bf3565b81811115610c21576000604083870101525b50601f01601f1916929092016040019392505050565b60008219821115610c4a57610c4a610dcd565b500190565b600082610c6c57634e487b7160e01b600052601260045260246000fd5b500490565b600181815b80851115610cac578160001904821115610c9257610c92610dcd565b80851615610c9f57918102915b93841c9390800290610c76565b509250929050565b60006108858383600082610cca575060016102e1565b81610cd7575060006102e1565b8160018114610ced5760028114610cf757610d13565b60019150506102e1565b60ff841115610d0857610d08610dcd565b50506001821b6102e1565b5060208310610133831016604e8410600b8410161715610d36575081810a6102e1565b610d408383610c71565b8060001904821115610d5457610d54610dcd565b029392505050565b6000816000190483118215151615610d7657610d76610dcd565b500290565b600082821015610d8d57610d8d610dcd565b500390565b600181811c90821680610da657607f821691505b60208210811415610dc757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea264697066735822122045a6db6915d7202fb3e5789e6f136534a7a76c0a0ab96fc838b8b730634476ff64736f6c63430008060033";
    static readonly abi: ({
        anonymous: boolean;
        inputs: {
            indexed: boolean;
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        type: string;
        outputs?: undefined;
        stateMutability?: undefined;
    } | {
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        outputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        stateMutability: string;
        type: string;
        anonymous?: undefined;
    })[];
    static createInterface(): MockInitializableTokenWithFeeInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): MockInitializableTokenWithFee;
}
